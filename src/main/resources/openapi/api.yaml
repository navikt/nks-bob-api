openapi: 3.1.0
info:
  title: NKS Bob API
  description: API for Nav Kontaktsenters chatbot Bob.
  version: latest
externalDocs:
  url: /
servers: [ ]
tags: [ ]
paths:
  /internal/prometheus:
    get:
      tags: [ ]
      parameters: [ ]
      responses: { }
      deprecated: false
  /internal/is_alive:
    get:
      tags: [ ]
      parameters: [ ]
      responses: { }
      deprecated: false
  /internal/is_ready:
    get:
      tags: [ ]
      parameters: [ ]
      responses: { }
      deprecated: false
  /api/v1/conversations:
    get:
      tags: [ ]
      description: Get all of your conversations
      parameters: [ ]
      responses:
        '200':
          description: A list of your conversations
          headers: { }
          content:
            application/json:
              schema:
                title: List<Conversation>
                type: array
                items:
                  $ref: '#/components/schemas/no.nav.nks_ai.conversation.Conversation'
      deprecated: false
    post:
      tags: [ ]
      description: Create a new conversation
      parameters: [ ]
      requestBody:
        description: The conversation to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/no.nav.nks_ai.conversation.NewConversation'
        required: false
      responses:
        '201':
          description: The conversation was created
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.conversation.Conversation'
      deprecated: false
  /api/v1/conversations/{id}:
    get:
      tags: [ ]
      description: Get a conversation with the given ID
      parameters:
        - name: id
          in: path
          description: The ID of the conversation
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.conversation.Conversation'
      deprecated: false
    put:
      tags: [ ]
      description: Update a conversation with the given ID
      parameters:
        - name: id
          in: path
          description: The ID of the conversation
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      requestBody:
        description: The conversation request to update
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/no.nav.nks_ai.conversation.UpdateConversation
        required: false
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.conversation.Conversation'
      deprecated: false
    delete:
      tags: [ ]
      description: Delete a conversation with the given ID
      parameters:
        - name: id
          in: path
          description: The ID of the conversation
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '204':
          description: The operation was successful
          headers: { }
      deprecated: false
  /api/v1/conversations/{id}/messages:
    get:
      tags: [ ]
      description: Get all messages for a given conversation
      parameters:
        - name: id
          in: path
          description: The ID of the conversation
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                title: List<Message>
                type: array
                items:
                  $ref: '#/components/schemas/no.nav.nks_ai.message.Message'
      deprecated: false
    post:
      tags: [ ]
      description: Add a new message to the conversation
      parameters:
        - name: id
          in: path
          description: The ID of the conversation
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      requestBody:
        description: The new message for the conversation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/no.nav.nks_ai.message.NewMessage'
        required: false
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                title: List<Message>
                type: array
                items:
                  $ref: '#/components/schemas/no.nav.nks_ai.message.Message'
      deprecated: false
  /api/v1/messages/{id}:
    get:
      tags: [ ]
      description: Get a message with the given ID
      parameters:
        - name: id
          in: path
          description: ID of the message
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.message.Message'
      deprecated: false
  /api/v1/messages/{id}/feedback:
    post:
      tags: [ ]
      description: Create a new feedback for a message
      parameters:
        - name: id
          in: path
          description: ID of the message
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      requestBody:
        description: The feedback to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/no.nav.nks_ai.feedback.NewFeedback'
        required: false
      responses:
        '201':
          description: The feedback was created
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.feedback.Feedback'
      deprecated: false
  /api/v1/user/config:
    get:
      tags: [ ]
      description: >-
        Get the current users config. If it does not exist yet it will be
        created.
      parameters: [ ]
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.user.UserConfig'
      deprecated: false
    put:
      tags: [ ]
      description: Update the current users config.
      parameters: [ ]
      requestBody:
        description: The updated user config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/no.nav.nks_ai.user.UserConfig'
        required: false
      responses:
        '200':
          description: The operation was successful
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/no.nav.nks_ai.user.UserConfig'
      deprecated: false
  /api/v1/admin/conversations:
    get:
      tags: [ ]
      description: Get all conversations for a given user
      parameters:
        - name: navIdent
          in: query
          description: navIdent for the given user
          required: false
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '200':
          description: A list the users conversations
          headers: { }
          content:
            application/json:
              schema:
                title: List<Conversation>
                type: array
                items:
                  $ref: '#/components/schemas/no.nav.nks_ai.conversation.Conversation'
      deprecated: false
    delete:
      tags: [ ]
      description: Delete all conversations for a given user
      parameters:
        - name: navIdent
          in: query
          description: navIdent for the given user
          required: false
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '204':
          description: The operation was successful
          headers: { }
      deprecated: false
  /api/v1/admin/conversations/{id}:
    delete:
      tags: [ ]
      description: Delete a conversation with the given ID for the given user
      parameters:
        - name: id
          in: path
          description: The ID of the conversation
          required: true
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
        - name: navIdent
          in: query
          description: navIdent for the given user
          required: false
          deprecated: false
          allowEmptyValue: true
          explode: false
          allowReserved: true
          schema:
            title: String
            type: string
      responses:
        '204':
          description: The operation was successful
          headers: { }
      deprecated: false
components:
  schemas:
    no.nav.nks_ai.conversation.Conversation:
      title: Conversation
      required:
        - createdAt
        - id
        - owner
        - title
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/kotlinx.datetime.LocalDateTime'
        id:
          title: String
          type: string
        owner:
          title: String
          type: string
        title:
          title: String
          type: string
    kotlinx.datetime.LocalDateTime:
      title: LocalDateTime
      required:
        - date
        - dayOfMonth
        - dayOfWeek
        - dayOfYear
        - hour
        - minute
        - month
        - monthNumber
        - nanosecond
        - second
        - time
        - year
      type: object
      properties:
        date:
          $ref: '#/components/schemas/kotlinx.datetime.LocalDate'
        dayOfMonth:
          title: Int
          type: integer
          format: int32
        dayOfWeek:
          $ref: '#/components/schemas/java.time.DayOfWeek'
        dayOfYear:
          title: Int
          type: integer
          format: int32
        hour:
          title: Int
          type: integer
          format: int32
        minute:
          title: Int
          type: integer
          format: int32
        month:
          $ref: '#/components/schemas/java.time.Month'
        monthNumber:
          title: Int
          type: integer
          format: int32
        nanosecond:
          title: Int
          type: integer
          format: int32
        second:
          title: Int
          type: integer
          format: int32
        time:
          $ref: '#/components/schemas/kotlinx.datetime.LocalTime'
        year:
          title: Int
          type: integer
          format: int32
    kotlinx.datetime.LocalDate:
      title: LocalDate
      required:
        - dayOfMonth
        - dayOfWeek
        - dayOfYear
        - month
        - monthNumber
        - year
      type: object
      properties:
        dayOfMonth:
          title: Int
          type: integer
          format: int32
        dayOfWeek:
          $ref: '#/components/schemas/java.time.DayOfWeek'
        dayOfYear:
          title: Int
          type: integer
          format: int32
        month:
          $ref: '#/components/schemas/java.time.Month'
        monthNumber:
          title: Int
          type: integer
          format: int32
        year:
          title: Int
          type: integer
          format: int32
    java.time.DayOfWeek:
      title: DayOfWeek
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    java.time.Month:
      title: Month
      enum:
        - JANUARY
        - FEBRUARY
        - MARCH
        - APRIL
        - MAY
        - JUNE
        - JULY
        - AUGUST
        - SEPTEMBER
        - OCTOBER
        - NOVEMBER
        - DECEMBER
    kotlinx.datetime.LocalTime:
      title: LocalTime
      required:
        - hour
        - minute
        - nanosecond
        - second
      type: object
      properties:
        hour:
          title: Int
          type: integer
          format: int32
        minute:
          title: Int
          type: integer
          format: int32
        nanosecond:
          title: Int
          type: integer
          format: int32
        second:
          title: Int
          type: integer
          format: int32
    no.nav.nks_ai.message.NewMessage:
      title: NewMessage
      required:
        - content
      type: object
      properties:
        content:
          title: String
          type: string
    no.nav.nks_ai.conversation.NewConversation:
      title: NewConversation
      required:
        - title
      type: object
      properties:
        initialMessage:
          $ref: '#/components/schemas/no.nav.nks_ai.message.NewMessage'
        title:
          title: String
          type: string
    no.nav.nks_ai.conversation.UpdateConversation:
      title: UpdateConversation
      required:
        - title
      type: object
      properties:
        title:
          title: String
          type: string
    no.nav.nks_ai.message.Message:
      title: Message
      required:
        - citations
        - content
        - context
        - createdAt
        - createdBy
        - id
        - messageRole
        - messageType
      type: object
      properties:
        citations:
          title: List<Citation>
          type: array
          items:
            $ref: '#/components/schemas/no.nav.nks_ai.citation.Citation'
        content:
          title: String
          type: string
        context:
          title: List<Context>
          type: array
          items:
            $ref: '#/components/schemas/no.nav.nks_ai.message.Context'
        createdAt:
          $ref: '#/components/schemas/kotlinx.datetime.LocalDateTime'
        createdBy:
          title: String
          type: string
        feedback:
          $ref: '#/components/schemas/no.nav.nks_ai.feedback.Feedback'
        id:
          title: String
          type: string
        messageRole:
          $ref: '#/components/schemas/no.nav.nks_ai.message.MessageRole'
        messageType:
          $ref: '#/components/schemas/no.nav.nks_ai.message.MessageType'
    no.nav.nks_ai.citation.Citation:
      title: Citation
      required:
        - article
        - section
        - text
        - title
      type: object
      properties:
        article:
          title: String
          type: string
        section:
          title: String
          type: string
        text:
          title: String
          type: string
        title:
          title: String
          type: string
    no.nav.nks_ai.message.Context:
      title: Context
      required:
        - content
        - metadata
      type: object
      properties:
        content:
          title: String
          type: string
        metadata:
          title: JsonObject
          type: object
          additionalProperties:
            title: '*'
            type: object
    no.nav.nks_ai.feedback.Feedback:
      title: Feedback
      required:
        - liked
      type: object
      properties:
        liked:
          title: Boolean
          type: boolean
    no.nav.nks_ai.message.MessageRole:
      title: MessageRole
      enum:
        - Human
        - AI
    no.nav.nks_ai.message.MessageType:
      title: MessageType
      enum:
        - Question
        - Answer
    no.nav.nks_ai.feedback.NewFeedback:
      title: NewFeedback
      required:
        - liked
      type: object
      properties:
        liked:
          title: Boolean
          type: boolean
    no.nav.nks_ai.user.UserConfig:
      title: UserConfig
      required:
        - showStartInfo
      type: object
      properties:
        showStartInfo:
          title: Boolean
          type: boolean
  examples: { }
